package jaya.jaramillo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProgramacionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramacionAllPropertiesEquals(Programacion expected, Programacion actual) {
        assertProgramacionAutoGeneratedPropertiesEquals(expected, actual);
        assertProgramacionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramacionAllUpdatablePropertiesEquals(Programacion expected, Programacion actual) {
        assertProgramacionUpdatableFieldsEquals(expected, actual);
        assertProgramacionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramacionAutoGeneratedPropertiesEquals(Programacion expected, Programacion actual) {
        assertThat(expected)
            .as("Verify Programacion auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramacionUpdatableFieldsEquals(Programacion expected, Programacion actual) {
        assertThat(expected)
            .as("Verify Programacion relevant properties")
            .satisfies(e -> assertThat(e.getFechaDesde()).as("check fechaDesde").isEqualTo(actual.getFechaDesde()))
            .satisfies(e -> assertThat(e.getFechaHasta()).as("check fechaHasta").isEqualTo(actual.getFechaHasta()))
            .satisfies(e -> assertThat(e.getDuracionMinutos()).as("check duracionMinutos").isEqualTo(actual.getDuracionMinutos()))
            .satisfies(e -> assertThat(e.getDesdeHoraAlmuerzo()).as("check desdeHoraAlmuerzo").isEqualTo(actual.getDesdeHoraAlmuerzo()))
            .satisfies(e -> assertThat(e.getHastaHoraAlmuerzo()).as("check hastaHoraAlmuerzo").isEqualTo(actual.getHastaHoraAlmuerzo()))
            .satisfies(e -> assertThat(e.getDiasSemana()).as("check diasSemana").isEqualTo(actual.getDiasSemana()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgramacionUpdatableRelationshipsEquals(Programacion expected, Programacion actual) {
        assertThat(expected)
            .as("Verify Programacion relationships")
            .satisfies(e -> assertThat(e.getHorarioConsulta()).as("check horarioConsulta").isEqualTo(actual.getHorarioConsulta()));
    }
}
