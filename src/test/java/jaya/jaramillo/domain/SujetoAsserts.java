package jaya.jaramillo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SujetoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSujetoAllPropertiesEquals(Sujeto expected, Sujeto actual) {
        assertSujetoAutoGeneratedPropertiesEquals(expected, actual);
        assertSujetoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSujetoAllUpdatablePropertiesEquals(Sujeto expected, Sujeto actual) {
        assertSujetoUpdatableFieldsEquals(expected, actual);
        assertSujetoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSujetoAutoGeneratedPropertiesEquals(Sujeto expected, Sujeto actual) {
        assertThat(expected)
            .as("Verify Sujeto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSujetoUpdatableFieldsEquals(Sujeto expected, Sujeto actual) {
        assertThat(expected)
            .as("Verify Sujeto relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getSegundoNombre()).as("check segundoNombre").isEqualTo(actual.getSegundoNombre()))
            .satisfies(e -> assertThat(e.getApellido()).as("check apellido").isEqualTo(actual.getApellido()))
            .satisfies(e -> assertThat(e.getSegundoApellido()).as("check segundoApellido").isEqualTo(actual.getSegundoApellido()))
            .satisfies(e -> assertThat(e.getDocumentoIdentidad()).as("check documentoIdentidad").isEqualTo(actual.getDocumentoIdentidad()))
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()))
            .satisfies(e -> assertThat(e.getSexo()).as("check sexo").isEqualTo(actual.getSexo()))
            .satisfies(e -> assertThat(e.getFechaNacimiento()).as("check fechaNacimiento").isEqualTo(actual.getFechaNacimiento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSujetoUpdatableRelationshipsEquals(Sujeto expected, Sujeto actual) {
        // empty method
    }
}
